- Player become a class of its own
	=> Player holds gold and -things related-
		-> Check in Character things that Event doesn't need
	=> Add a member: Character *m_character;
	=> void draw() { m_character->draw(); } etc...
	=> Adds the possibility to change character while playing
		-> On map skill?

- Manage the chance to get an item
- Manage a team of Actors in Player
- Remove <actor> lines in battles.xml to replace Battle::m_actors by the current equip
- Define team in player.xml

- Add a class Troop ( equip of enemies )
	=> Replace battles.xml by troops.xml
	=> Define battleback by Map, but it's possible to change it further
	=> Edit all related files
		-> Battle object created at each Battle
		-> Delete BattleManager and create TroopManager

- Add a lot of stats display help functions to Window class
	* Find a way to improve EquipStatsWindow
		=> Always render the arrow at the same position
			not relative with numbers anymore
				OR
		=> Create a super-optimized function displaying it very fastly
			in Font
	* Add a parameter 'bool seeMaximum' to see '25/125' instead of '25'

- Make an ActorChoiceWindow which will permit to choose between equip members
	=> Create a function Window::drawCursor(s16 x, s16 y, u16 width, u16 height);
	=> Add that window in MenuActivity, which will show it only on demand
		-> Don't forget to avoid the cursor in menu CommandWindow
	=> Adapt EquipActivity to get the current actor to equip
		-> Improve ItemWindow to let the user select a void element at the end
			( In order to be able to unequip )

- [Issue #35] Add music and sound effects
	=> Convert all music to mp3 and test reading on android
	=> Victory song
	=> Gameover song
	=> Attacks sound effects
	=> Sound::Effect::loadAttacks();
	=> Sound::Effect::play(Sound::Effect::attacks["BaseAttack"]):
	=> Chests sound effect

- [Issue #34] Manage usable Items and their function + create ItemChoiceWindow
	=> Manage usable Items and their function
		-> A virtual base class ItemAction
			* Child classes ItemHealAction or ItemDamagesAction
			* ItemMapAction
				=> Give a way to check conditions before being able to use an item
	=> Create a new class ItemChoiceWindow
		-> Represents all the possibilities to do with the Item we choosed
			* For example a potion have a choice "Use" 
				--> Change the mode to ChooseActorTarget

- [Issue #33] Improve Animation class
	=> Add position ( top, middle, bottom )
	=> Add movement ( for bullets )
	=> Add actions ( AnimationAction class )
	=> Add animations

- Permit to omit useless functions in events ( like update or collisionAction for event3c, or movements for chest0 )
- Add parameters to events, like speed for characters and all params for the chests
	=> Add a class Chest, child of Character, which will help for the save engine later
		OR
	=> Make a save engine which will work well with Lua, useful for modding
		=> A lua function save in each pseudo-class?

- [Issue #40] Improve damage rendering on Android
	=> Base coordinates on SDL_GetTicks() instead of global variables

-> Improve battler death color fading
-> Improve Font::printDamages color
-> Improve Font::printDamages movement

- [Issue #16] Work on transitions between maps
	=> Add a line like <border pos="Left" mapX="0" mapY="2" area="5"/>
		* Scroll like in Radonia
		* While scrolling, render only a scaled version of the two maps, to improve performances
	=> Add a Transition class, child of Sprite, to handle map transitions
	=> Add a Lua pseudo-class TeleporterEvent

- [Issue #39] Error check in xml config file reading
	=> Add an overlay to XMLElement which tests attributes

- [Issue #41] Work on lua pseudo-classes and add switches

- [Issue #38] Work on lua mods
	=> Add a class 'LuaMod'
	=> Create a class 'ModLibrary' which will provide all the functions
	   required to develop a mod in Lua

- Manage disabled items in SelectableWindow ( maybe use a std::vector<std::pair<std::string, bool>>> for commands container )

- Improve Makefile:
	=> For 'make', when there is all .o in 'build', display '[5/5]' instead of '[5/1]'
		-> The second '5' is the number of targets to build
			* Delete .o we'll build?

- Create a new class SkillActivity, child of ItemActivity
	* Add it in the menu
	* Add it in the battles

- [Issue #17] Up and Down keys have an higher priority than Left and Right ones
	=> Make an history of the last directional key pressed
		* Make a key stack
			-> Search for the last directional key pressed
			-> u32 Keyboard::lastDirectionKeyPressed();

- Maybe create Activity child classes instead of modes for BattleActivity

- Make a shop interface, callable from an event ( like a ShopActivity )
	* Create a ShopChoiceWindow
	* Items in shop are defined by event inventory

- Make a DebugWindow which will help to test a lot of things
	=> Add gui functions

- [Issue #6] Improve pad and buttons for Android

- [Issue #9] When application is in background, pause app instead of exiting

- Lua scripts for dungeons:
	* File tree like that:
		dungeons/
		---- dungeon1/
		---- ---- level0/
		---- ---- ---- room1/
		---- ---- ---- ---- event0/
		---- ---- ---- ---- ---- main.lua
		---- dungeon 2/
	* etc..
				OR
	* File tree like that:
		events/
			dungeon1/
				main.lua ======>|
				level0/		    |
					main.lua <==|==>|
					room1/			|
						main.lua <==|==>|
						event0/			|
							main.lua <==|

- Improve EquipActivity performances on Android

- Create StateWindow class

- Make a save engine
	=> XML encrypted
	* Save events state ( Character position, chest open state, etc... )
	* Save player state
	* Save actors state
		=>>>>>>> Make an EventListener which will get all the new state changement, to save it later
		=>>>>>>> It will keep everything in game state, useful for auto save

- Improve TitleScreen

- Add conditions in messages for CharacterEvents
	=> Useful for Quests

- Add choices in DialogWindow
	=> Yes/No style but with variable text

- Add colors in text
	=> BBCode-like parser in a special Font function
		-> Code like 'I [red]am[/red] the [blue]winner[/blue].'
			OR
		-> Code like 'I [1]am[/1] the [2]winner[/2].' and 1=red, 2=blue
	=> That function will merge Images

- [Issue #10] Lines with linear scaling
	=> Search a solution to avoid this problem
	=> Happens on PC too

- Improve all interfaces

- Change graphics and font

- Make a wiki which will reference all lua functions availables

- Check bugs

- Test porting to Android, Windows and Mac OS X

- Engine finished!
